window.serverUrl=null;window.chainId=null;window.gasLimit=1000000;function getERC20(){var abi='[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]';return abi};function getNFT(){var abi='[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"},{"internalType":"uint256[1]","name":"input","type":"uint256[1]"}],"name":"addNFT","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"},{"internalType":"uint256[1]","name":"input","type":"uint256[1]"}],"name":"addNFTs","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"m","type":"uint256"}],"name":"changeFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getAuthor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"verify","type":"address"},{"internalType":"uint256","name":"maxLimit","type":"uint256"}],"name":"initNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"hash","type":"uint256"}],"name":"isUsedHash","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"tokensOfOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"transferNFTs","outputs":[],"stateMutability":"nonpayable","type":"function"}]';return abi};function getESCROW(){var abi='[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"buyNFT","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"m1","type":"uint256"},{"internalType":"uint256","name":"m2","type":"uint256"}],"name":"changeFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"transfer","type":"address"}],"name":"initNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"pullNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sellNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"nftContracts","type":"address[]"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"address[]","name":"tokenAddresses","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"sellNFTs","outputs":[],"stateMutability":"nonpayable","type":"function"}]';return abi};function Pxsdk(){};Pxsdk.prototype={ethContract:"",ethTransferContract:"",ethEscrowContract:"",ethXNFTContract:"",tokenList:[],};Pxsdk.prototype.updateContracts=function(contracts){this.__proto__.ethContract=contracts.ethContract?contracts.ethContract:'';this.__proto__.ethTransferContract=contracts.ethTransferContract?contracts.ethTransferContract:'';this.__proto__.ethEscrowContract=contracts.ethEscrowContract?contracts.ethEscrowContract:'';this.__proto__.ethXNFTContract=contracts.ethXNFTContract?contracts.ethXNFTContract:'';this.__proto__.tokenList=contracts.tokenList?contracts.tokenList:[]};Pxsdk.prototype.getContractERC20=function(contractToken){if(web3.eth==undefined||web3.currentProvider==undefined){console.log("web3 error");return}var _contract=new web3.eth.Contract(JSON.parse(getERC20()));_contract.options.address=contractToken;return _contract};Pxsdk.prototype.getContractNFT=function(contractToken){if(web3.eth==undefined||web3.currentProvider==undefined){console.log("web3 error");return}var _contract=new web3.eth.Contract(JSON.parse(getNFT()));_contract.options.address=contractToken;return _contract};Pxsdk.prototype.getContractESCROW=function(contractToken){if(web3.eth==undefined||web3.currentProvider==undefined){console.log("web3 error");return}var _contract=new web3.eth.Contract(JSON.parse(getESCROW()));_contract.options.address=contractToken;return _contract};Pxsdk.prototype.getFromAddress=function(){return window.fromAddress};Pxsdk.prototype.isStrEqualWithoutCase=function isStrEqualWithoutCase(str1,str2){if(str1==null||str1==undefined){str1=''}if(str2==null||str2==undefined){str2=''}return str1.toLowerCase()==str2.toLowerCase()};Pxsdk.prototype.getBalance=function(toAddress,callback){try{if(web3.eth==undefined||web3.currentProvider==undefined){console.log("web3 error");return}web3.eth.getBalance(toAddress).then((result)=>{callback(null,web3.utils.fromWei(result,"ether")*1)})}catch(e){callback(e)}};Pxsdk.prototype.getOwnerOfNFT=function(tokenId,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();var _contract=Pxsdk.getContractNFT(nftContract);_contract.methods.ownerOf(tokenId).call({from:fromAddress}).then((result)=>{callback(null,result)})}catch(e){callback(e)}};Pxsdk.prototype.getApproveBuyNFT=function(tokenId,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();Pxsdk.getOwnerOfNFT(nftContract,tokenId,function(err,result){if(err){callback(err);return}if(Pxsdk.isStrEqualWithoutCase(result,Pxsdk.ethEscrowContract)){var _contract=Pxsdk.getContractESCROW(Pxsdk.ethEscrowContract);_contract.methods.getAmount(nftContract,tokenId).call({from:fromAddress}).then((result)=>{var _amount=result;_contract.methods.getTokenAddress(nftContract,tokenId).call({from:fromAddress}).then((result)=>{if(result==Pxsdk.ethContract){callback(null)}else{var _contract=Pxsdk.getContractERC20(result);_contract.methods.allowance(fromAddress,Pxsdk.ethTransferContract).call({from:fromAddress}).then((result)=>{if(result*1>=_amount*1){callback(null)}else{if(result*1>0){callback("not enough approve");return}callback("no approve")}})}})})}else{callback("no escrow")}})}catch(e){callback(e)}};Pxsdk.prototype.getApproveSellNFT=function(tokenId,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();Pxsdk.getOwnerOfNFT(nftContract,tokenId,function(err,result){if(err){callback(err);return}if(Pxsdk.isStrEqualWithoutCase(result,fromAddress)){var _contract=Pxsdk.getContractNFT(nftContract);_contract.methods.getApproved(tokenId).call({from:fromAddress}).then((result)=>{if(result==Pxsdk.ethEscrowContract){callback(null)}else{callback("no approve")}})}else{callback("no owner")}})}catch(e){callback(e)}};Pxsdk.prototype.approveBuyNFT=function(tokenId,isClear,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();Pxsdk.getOwnerOfNFT(nftContract,tokenId,function(err,result){if(err){callback(err);return}if(Pxsdk.isStrEqualWithoutCase(result,Pxsdk.ethEscrowContract)){Pxsdk.getBalance(fromAddress,function(err,data){if(err){callback(err);return}web3.eth.getTransactionCount(fromAddress).then((result)=>{var _nonce=web3.utils.toHex(result);var _contract=Pxsdk.getContractESCROW(Pxsdk.ethEscrowContract);_contract.methods.getAmount(nftContract,tokenId).call({from:fromAddress}).then((result)=>{var _amount=result;_contract.methods.getTokenAddress(nftContract,tokenId).call({from:fromAddress}).then((result)=>{if(result==Pxsdk.ethContract){callback("approve error")}else{var _token=result;var _contract=Pxsdk.getContractERC20(_token);_contract.methods.balanceOf(fromAddress).call({from:fromAddress}).then((result)=>{if(result*1>=_amount*1){web3.eth.getGasPrice().then((result)=>{var _gasPrice=result;if(data*1>=web3.utils.fromWei(window.gasLimit*_gasPrice+"","ether")*1){var _data={from:fromAddress,to:_token,gasPrice:web3.utils.toHex(_gasPrice),gas:web3.utils.toHex(window.gasLimit),data:_contract.methods.approve(Pxsdk.ethTransferContract,(isClear)?0:_amount).encodeABI(),nonce:_nonce,value:0};Pxsdk.sendTransaction(_data,callback)}else{callback("not enough eth")}})}else{callback("not enough token")}})}})})})})}else{callback("no escrow")}})}catch(e){callback(e)}};Pxsdk.prototype.approveSellNFT=function(tokenId,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();Pxsdk.getOwnerOfNFT(nftContract,tokenId,function(err,result){if(err){callback(err);return}if(Pxsdk.isStrEqualWithoutCase(result,fromAddress)){Pxsdk.getBalance(fromAddress,function(err,data){if(err){callback(err);return}web3.eth.getTransactionCount(fromAddress).then((result)=>{var _nonce=web3.utils.toHex(result);var _contract=Pxsdk.getContractNFT(nftContract);web3.eth.getGasPrice().then((result)=>{var _gasPrice=result;if(data*1>=web3.utils.fromWei(window.gasLimit*_gasPrice+"","ether")*1){var _data={from:fromAddress,to:nftContract,gasPrice:web3.utils.toHex(_gasPrice),gas:web3.utils.toHex(window.gasLimit),data:_contract.methods.approve(window.Pxsdk.ethEscrowContract,tokenId).encodeABI(),nonce:_nonce,value:0};Pxsdk.sendTransaction(_data,callback)}else{callback("not enough eth")}})})})}else{callback("no owner")}})}catch(e){callback(e)}};Pxsdk.prototype.transferNFT=function(tokenId,toAddress,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();var func=function(owner,fromAddress,toAddress,tokenId){Pxsdk.getBalance(fromAddress,function(err,data){if(err){callback(err);return}web3.eth.getTransactionCount(fromAddress).then((result)=>{var _nonce=web3.utils.toHex(result);var _contract=Pxsdk.getContractNFT(nftContract);web3.eth.getGasPrice().then((result)=>{var _gasPrice=result;if(data*1>=web3.utils.fromWei(window.gasLimit*_gasPrice+"","ether")*1){var _data={from:fromAddress,to:nftContract,gasPrice:web3.utils.toHex(_gasPrice),gas:web3.utils.toHex(window.gasLimit),data:_contract.methods.safeTransferFrom(owner,toAddress,tokenId).encodeABI(),nonce:_nonce,value:0};Pxsdk.sendTransaction(_data,callback)}else{callback("not enough eth")}})})})};Pxsdk.getOwnerOfNFT(nftContract,tokenId,function(err,result){if(err){callback(err);return}var owner=result;if(Pxsdk.isStrEqualWithoutCase(result,fromAddress)){func(owner,fromAddress,toAddress,tokenId)}else{var _contract=Pxsdk.getContractNFT(nftContract);_contract.methods.getApproved(tokenId).call({from:fromAddress}).then((result)=>{if(Pxsdk.isStrEqualWithoutCase(result,fromAddress)){func(owner,fromAddress,toAddress,tokenId)}else{callback("no approve")}})}})}catch(e){callback(e)}};Pxsdk.prototype.sellNFT=function(tokenId,tokenAddress,amount,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();Pxsdk.getOwnerOfNFT(nftContract,tokenId,function(err,result){if(err){callback(err);return}if(Pxsdk.isStrEqualWithoutCase(result,fromAddress)){var _contract=Pxsdk.getContractNFT(nftContract);_contract.methods.getApproved(tokenId).call({from:fromAddress}).then((result)=>{if(result==Pxsdk.ethEscrowContract){Pxsdk.getBalance(fromAddress,function(err,data){if(err){callback(err);return}web3.eth.getTransactionCount(fromAddress).then((result)=>{var _nonce=web3.utils.toHex(result);var _contract=Pxsdk.getContractESCROW(Pxsdk.ethEscrowContract);web3.eth.getGasPrice().then((result)=>{var _gasPrice=result;if(data*1>=web3.utils.fromWei(window.gasLimit*_gasPrice+"","ether")*1){var _data={from:fromAddress,to:Pxsdk.ethEscrowContract,gasPrice:web3.utils.toHex(_gasPrice),gas:web3.utils.toHex(window.gasLimit),data:_contract.methods.sellNFT(nftContract,tokenId,tokenAddress,amount+"").encodeABI(),nonce:_nonce,value:0};Pxsdk.sendTransaction(_data,callback)}else{callback("not enough eth")}})})})}else{callback("no approve")}})}else{callback("no owner")}})}catch(e){callback(e)}};Pxsdk.prototype.pullNFT=function(tokenId,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();Pxsdk.getOwnerOfNFT(nftContract,tokenId,function(err,result){if(err){callback(err);return}if(Pxsdk.isStrEqualWithoutCase(result,Pxsdk.ethEscrowContract)){Pxsdk.getBalance(fromAddress,function(err,data){if(err){callback(err);return}web3.eth.getTransactionCount(fromAddress).then((result)=>{var _nonce=web3.utils.toHex(result);var _contract=Pxsdk.getContractESCROW(Pxsdk.ethEscrowContract);web3.eth.getGasPrice().then((result)=>{var _gasPrice=result;if(data*1>=web3.utils.fromWei(window.gasLimit*_gasPrice+"","ether")*1){var _data={from:fromAddress,to:Pxsdk.ethEscrowContract,gasPrice:web3.utils.toHex(_gasPrice),gas:web3.utils.toHex(window.gasLimit),data:_contract.methods.pullNFT(nftContract,tokenId).encodeABI(),nonce:_nonce,value:0};Pxsdk.sendTransaction(_data,callback)}else{callback("not enough eth")}})})})}else{callback("no escrow")}})}catch(e){callback(e)}};Pxsdk.prototype.buyNFT=function(tokenId,callback){var nftContract=Pxsdk.ethXNFTContract;try{var fromAddress=Pxsdk.getFromAddress();var func=function(fromAddress,tokenId,amount){Pxsdk.getBalance(fromAddress,function(err,data){if(err){callback(err);return}web3.eth.getTransactionCount(fromAddress).then((result)=>{var _nonce=web3.utils.toHex(result);var _contract=Pxsdk.getContractESCROW(Pxsdk.ethEscrowContract);web3.eth.getGasPrice().then((result)=>{var _gasPrice=result;if(data*1>=web3.utils.fromWei((window.gasLimit*_gasPrice+amount*1)+"","ether")*1){var _data={from:fromAddress,to:Pxsdk.ethEscrowContract,gasPrice:web3.utils.toHex(_gasPrice),gas:web3.utils.toHex(window.gasLimit),data:_contract.methods.buyNFT(nftContract,tokenId).encodeABI(),nonce:_nonce,value:(amount>0)?web3.utils.toHex(amount):0};Pxsdk.sendTransaction(_data,callback)}else{callback("not enough eth")}})})})};Pxsdk.getOwnerOfNFT(nftContract,tokenId,function(err,result){if(err){callback(err);return}if(Pxsdk.isStrEqualWithoutCase(result,Pxsdk.ethEscrowContract)){var _contract=Pxsdk.getContractESCROW(Pxsdk.ethEscrowContract);_contract.methods.getAmount(nftContract,tokenId).call({from:fromAddress}).then((result)=>{var _amount=result;_contract.methods.getTokenAddress(nftContract,tokenId).call({from:fromAddress}).then((result)=>{if(result==Pxsdk.ethContract){func(fromAddress,tokenId,_amount)}else{var _contract=Pxsdk.getContractERC20(result);_contract.methods.allowance(fromAddress,Pxsdk.ethTransferContract).call({from:fromAddress}).then((result)=>{if(result*1>=_amount*1){func(fromAddress,tokenId,0)}else{callback("no approve")}})}})})}else{callback("no escrow")}})}catch(e){callback(e)}};Pxsdk.prototype.init=function(url,callback){window.serverUrl=url;var that=this;var func=function(accounts){var _web3=new Web3();_web3.setProvider(window.provider);web3=_web3;if(accounts){web3.eth.defaultAccount=accounts[0];window.fromAddress=accounts[0];callback(null,accounts[0])}else{callback("User not login")}};if(typeof window.ethereum==="undefined"){callback("Please install MetaMask")}else{window.chainId=ethereum.networkVersion;ethereum.enable().catch(function(reason){if(reason==="User rejected provider access"){callback("Please approve")}else{callback("error")}}).then(function(accounts){func(accounts)});ethereum.on("networkChanged",function(networkID){window.chainId=networkID;that.chooseNetwork(function(err,result){if(err){return}that.updateContracts(result)})});ethereum.on("accountsChanged",function(accounts){if(accounts&&window.fromAddress==accounts[0]){return}func(accounts)})}};Pxsdk.prototype.sendSign=function(callback){try{if(web3.eth==undefined||web3.currentProvider==undefined){console.log("web3 error");return}var nonce=Math.floor(Math.random()*window.gasLimit)+"";web3.currentProvider.sendAsync({id:1,method:'personal_sign',params:[web3.utils.utf8ToHex(nonce),window.fromAddress.toLowerCase()]},function(err,result){if(err){callback(err);return}callback(null,{nonce:nonce,address:window.fromAddress.toLowerCase(),signature:result.result})})}catch(e){callback(e)}};Pxsdk.prototype.send=function(urls,types,header,data,callback){try{$.ajax({url:urls,headers:header,type:types,processData:false,contentType:"application/json; charset=utf-8",data:data,success:function(data){if(data.code==200){callback(null,data.data)}else{callback(data.msg)}},error:function(err){callback(err.statusText)}})}catch(e){callback(e)}};Pxsdk.prototype.login=function(access_key,playerId,address,nonce,signature,callback){var that=this;this.send(window.serverUrl+"player/wallet/login","post",{access_key:access_key},JSON.stringify({"address":address,"nonce":nonce,"playerId":playerId,"signature":signature}),function(err,result){if(err){callback(err);return}window.sdkToken="Bearer "+result;callback(err,result);that.chooseNetwork(function(err,result){if(err){return}that.updateContracts(result)})})};Pxsdk.prototype.getNFTList=function(callback){if(window.sdkToken){this.send(window.serverUrl+"player/NFT/list","get",{authorization:window.sdkToken},null,callback)}else{callback("no login")}};Pxsdk.prototype.getNFTByTokenId=function(tokenId,callback){if(window.sdkToken){this.send(window.serverUrl+"player/NFT/token/"+tokenId,"get",{authorization:window.sdkToken},null,callback)}else{callback("no login")}};Pxsdk.prototype.getNFTByPlayer=function(callback){if(window.sdkToken){this.send(window.serverUrl+"player/NFT/assets/list","get",{authorization:window.sdkToken},null,callback)}else{callback("no login")}};Pxsdk.prototype.chooseNetwork=function(callback){if(window.sdkToken){this.send(window.serverUrl+"player/get/address/"+window.chainId,"get",{authorization:window.sdkToken},null,callback)}else{callback("no login")}};Pxsdk.prototype.getCurrTokenList=function(callback){if(window.sdkToken){this.chooseNetwork(function(err,result){callback(err,result.tokenList)})}else{callback("no login")}};